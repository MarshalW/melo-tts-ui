// from grok
import { useState, type SetStateAction } from 'react';
import { Input, Button, message, Row, Col } from 'antd';

const TextToSpeech = () => {
    const [text, setText] = useState('');
    const [audioUrl, setAudioUrl] = useState(null);
    const [loading, setLoading] = useState(false);

    const handleTextChange = (e: { target: { value: SetStateAction<string>; }; }) => {
        setText(e.target.value);
    };

    const handleSubmit = async () => {
        if (!text) {
            message.error('请输入文本');
            return;
        }

        setLoading(true);

        try {
            const response = await fetch('/convert/tts', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ text }),
            });

            if (!response.ok) {
                throw new Error('请求失败');
            }

            const blob = await response.blob();
            const url = URL.createObjectURL(blob);
            setAudioUrl(url);
        } catch (error) {
            message.error('获取音频失败');
        } finally {
            setLoading(false);
        }
    };

    return (
        <div style={{ padding: '20px' }}>
            <Row gutter={16}>
                <Col span={18}>
                    <Input
                        placeholder="输入文本"
                        value={text}
                        onChange={handleTextChange}
                        style={{ marginBottom: '10px' }}
                    />
                </Col>
                <Col span={6}>
                    <Button type="primary" onClick={handleSubmit} loading={loading}>
                        转换
                    </Button>
                </Col>
            </Row>
            {audioUrl && (
                <audio controls src={audioUrl} style={{ marginTop: '10px', width: '100%' }} />
            )}
        </div>
    );
};

export default TextToSpeech;